
<div class="q-pa-md" style="max-width:500px">
<h2><span v-if="roleId">Edit</span><span v-else>Create</span> Role</h2>
<q-btn href="/RAPS" icon="arrow_back" label="Roles" class="q-mb-md"></q-btn>
<q-form
    @@submit="editRole">
    <q-input outlined  v-model="role.role" label="Role"></q-input>
    <q-input outlined v-model="role.description" label="Description" type="textarea"></q-input>
    <q-checkbox v-model="role.application" true-value="1" false-value="0" label="Application Role"></q-checkbox>
    <q-input outlined v-model="role.viewName" label="View"></q-input>
    <br />
    <q-btn label="Submit" type="submit" color="primary" />
</q-form>
</div>

@section Scripts {
    <script asp-add-nonce="true">
        vueObjects.roleId = @ViewData["RoleId"]
        vueObjects.role = {}
        vueMethods.loadRole = async function () {
            var res = await fetch("/RAPS/Roles/" + this.roleId)
            this.role = await res.json()
            this.role.application = this.role.application == 1 ? "1" : "0"
        }
        vueMethods.editRole = async function() {
            //this.role.application = this.role.application ? 1 : 0
            var requestOptions = {
                method: this.roleId ? "PUT" : "POST",
                body: JSON.stringify(this.role),
                headers: { "Content-Type": "application/json" }
            }
            fetch("/RAPS/Roles/" + this.role.roleId, requestOptions)
                
            
        }
        vueMountedActions.push(async function () { this.loadRole() })
    </script>
}