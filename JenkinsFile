@Library('AdminAppsSharedLibrary') _
def copyOperations = [
	[
		source: ".\\web\\bin\\Release\\net7.0",
		testDestination: "%vipertestnet%",
		prodDestination: "%viperprodnet%",
		includeFiles: "*.*",
		excludeFiles: "",
		excludeDirectories: ""
	]

]
pipeline {
    agent any
    options {
        skipStagesAfterUnstable()
    }
    stages { 
        stage('Restore packages') {
		  steps {
			bat '"C:\\Program Files\\dotnet\\dotnet" restore Viper.sln'
		  }
		}
        stage('Clean Previous Build') {
		  steps {
			bat '"C:\\Program Files\\dotnet\\dotnet" clean Viper.sln'
		  }
		}
		stage('Build') {
            steps { 
                bat '"C:\\Program Files\\dotnet\\dotnet" publish ./web/Viper.csproj -c "Release" /p:EnvironmentName=Test'
            }
        }
		stage('Deploy') {
            steps { 
                stage('Deploy to test') {
					when {
						expression { params.Branch == 'development' }
					}
					steps {
						networkShares()
						filecopy copyOperations, 'test', env.WORKSPACE
					}
				}
				stage('Deploy to prod') {
					when {
						expression { params.Branch == 'master' || params.Branch == "main" }
					}
					steps {
						networkShares()
						filecopy copyOperations, 'prod', env.WORKSPACE
					}
				}
            }
        }
    }
}