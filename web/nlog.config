<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="${configsetting:item=LoggingPath}\internal-viperlog.txt">

  <!-- Load the ASP.NET Core plugin -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <variable name="appName" value="VIPER" />
  <variable name="logDirectory" value="${configsetting:item=LoggingPath}\${appName}" />

  <!-- the targets to write to -->
  <targets>

    <default-wrapper xsi:type="AsyncWrapper" timeToSleepBetweenBatches="0" overflowAction="Block" />

    <target xsi:type="File" name="warningErrorFile" fileName="${logDirectory}\viperlog-${shortdate}.log"
						header="Date Time|Env|App|Level|Username|Request IP|Request Method|URL|QueryString|UserAgent|traceidentifier ¦ logger|Message ¦ exception"
						layout="${longdate}|${currentEnviroment}|${appName}|${uppercase:${level}}|${aspnet-User-Identity}|${aspnet-Request-IP}|${aspnet-Request-Method}|${aspnet-Request-Url}|${aspnet-Request-QueryString}|${aspnet-Request-UserAgent}|${aspnet-traceidentifier}${newline}${logger}|${message}${newline}${exception:format=tostring,Data:maxInnerExceptionLevel=10}" />

    <target xsi:type="File" name="debugFile" fileName="${logDirectory}\viperlog-debug-${shortdate}.log"
						 header="Date Time|Env|App|Level|Username|Request IP|Request Method|URL|QueryString|UserAgent|traceidentifier ¦ logger|Message ¦ exception"
						 layout="${longdate}|${currentEnviroment}|${appName}|${uppercase:${level}}|${aspnet-User-Identity}|${aspnet-Request-IP}|${aspnet-Request-Method}|${aspnet-Request-Url}|${aspnet-Request-QueryString}|${aspnet-Request-UserAgent}|${aspnet-traceidentifier}${newline}${logger}|${message}${newline}${exception:format=tostring,Data:maxInnerExceptionLevel=10}" />
    
    <target xsi:type="ColoredConsole" name="warningErrorConsole" layout="${MicrosoftConsoleLayout}" >
      <highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkGray" />
      <highlight-row condition="level == LogLevel.Info" foregroundColor="Green" />
      <highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
      <highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
      <highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
    </target>

    <target xsi:type="File" name="smtpSentLog" fileName="${logDirectory}\Email\viperlog-${shortdate}.log"
						header="Date Time|Level|Logger|Subject|To|Message"
						layout="${longdate}|${uppercase:${level}}|${event-properties:item=CallingMethod}|${event-properties:item=Subject}|${event-properties:item=To}|${message}" />
	<target xsi:type="Mail"
			name="warningErrorEmail"
			smtpServer="ucdavis-edu.mail.protection.outlook.com"
						smtpPort="25"
						smtpAuthentication="None"
						enableSsl="true"
			html="true"
			addNewLines="true"
			replaceNewlineWithBrTagInHtml="true"
			subject="@SDP@ VIPER Error: ${aspnet-Request-Url}: ${machinename} ${date}"
			to="svmithelp@ucdavis.edu"
			from="bsedwards@ucdavis.edu"
			body="&lt;b&gt;User Info:&lt;/b&gt;${newline}
                Severity: ${uppercase:${level}}${newline}
                User Identity: ${aspnet-User-Identity} ${newline}
                Client IP: ${aspnet-Request-IP}${newline}
                Method: ${aspnet-Request-Method}${newline}
                Url: ${aspnet-Request-Url}${newline}
                QueryString: ${aspnet-Request-QueryString}${newline}
                Referrer: ${aspnet-Request-Referrer}${newline}
                UserAgent: ${aspnet-Request-UserAgent}${newline}${newline}
                &lt;b&gt;Exception:&lt;/b&gt;${newline}
                Message: ${message}${newline}
                Source: ${logger}${newline}
                Stack: ${exception:format=tostring,Data:maxInnerExceptionLevel=10}
                @@SITE=SVM@@
                @@CATEGORY=Web Apps@@
                @@SUBCATEGORY=VIPER@@
                @@STATUS=In Progress@@
                @@GROUP=Administrative Applications@@
                @@REQUESTER=VIPER AUTOSUBMIT@@
                @@TECHNICIANEMAIL=bsedwards@ucdavis.edu@@"
        />

    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />  
  
    <!-- Uncomment to log all requests in Test and Prod -->
    <!--<target xsi:type="File" name="activityfile" fileName="${logDirectory}\nlog-${shortdate}.log"
						header="Date Time|Level|Username|Request IP|Request Method|URL|QueryString|UserAgent|Referrer|Message"
						layout="${longdate}|${uppercase:${level}}|${aspnet-User-Identity}|${aspnet-Request-IP}|${aspnet-Request-Method}|${aspnet-Request-Url}|${aspnet-Request-QueryString}|${aspnet-Request-UserAgent}|${aspnet-Request-Referrer}|${message}" />-->

  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <logger name="SmtpEmailLogger" minlevel="Info" writeTo="smtpSentLog" final="true" />    
    
    <!--Log to warning and error file only in Prod and Test-->
    <logger name="*" minlevel="${configsetting:item=Logging.LogLevel.Default}" writeTo="warningErrorFile">
      <filters defaultAction='Log'>
        <when condition="contains('${currentEnviroment}','Development')" action="Ignore" />
      </filters>
    </logger>

	<!--Log to debug file in dev and test-->
	<logger name="*" minlevel="Info" maxlevel="Info" writeTo="debugFile">
		<filters defaultAction='Log'>
			<when condition="contains('${currentEnviroment}','Production')" action="Ignore" />
		</filters>
	</logger>
    
    <!--Log to console for debugging locally-->
    <logger name="*" minlevel="${configsetting:item=Logging.LogLevel.Default}" writeTo="warningErrorConsole">      
      <filters defaultAction='Log'>
        <when condition="starts-with(logger, 'Microsoft')" action="Ignore" />
        <when condition="contains('${currentEnviroment}','Test')" action="Ignore" />
        <when condition="contains('${currentEnviroment}','Production')" action="Ignore" />
      </filters>
    </logger>
    
    <!--Only send error messages to ServiceDesk in production and only for "Error" or higher types-->
    <logger name="*" minlevel="Error" writeTo="warningErrorEmail">
      <filters defaultAction='Log'>
        <when condition="contains('${currentEnviroment}','Development')" action="Ignore" />
		  <when condition="contains('${currentEnviroment}','Test')" action="Ignore" />
        <whenRepeated layout="${aspnet-User-Identity}|${message}" timeoutSeconds="600" action="Ignore" />
      </filters>
    </logger>
    
    
    <!-- Uncomment to log all requests in Test and Prod -->
    <!--<logger name="Microsoft.AspNetCore.Hosting.Diagnostics" level="Info" writeTo="activityfile">
      <filters defaultAction='Log'>
        --><!-- Don't do request logging on the developers systems --><!--
        <when condition="'${currentEnviroment}' == 'Development'" action="Ignore" />
        --><!-- Log MVC action requests --><!--
        <when condition="length('${aspnet-mvc-action}') > 0" action="Log" />
        --><!-- Ignore all other microsoft logging --><!--
        <when condition="starts-with(logger, 'Microsoft')" action="Ignore" />
      </filters>
    </logger>-->

    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole" final="true" />

    <!--Skip non-critical Microsoft logs -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />
  </rules>
</nlog>