@using Viper.Classes.SQLContext;
@model Viper.Models.AAUD.AaudUser;
@{
    RAPSContext? rapsContext = (RAPSContext?)Context.RequestServices.GetService(typeof(RAPSContext));
    IUserHelper UserHelper = new UserHelper();
    ViewData["Title"] = "Directory";
}
<h2>Directory</h2>
<q-form @@submit="return false;">
    <q-input class="q-ml-xs q-mr-xs"
             dense
             clearable
             clear-icon="close"
             outlined
             debounce="300"
             placeholder="Search for users"
             v-model="userSearch"
             autofocus>
    </q-input>
    <q-toggle v-model="ucd"
              color="green"
              label="Search all of UCD">
    </q-toggle>
    <q-toggle v-model="ids"
              color="blue"
              label="Display IDs">
    </q-toggle>
    <!--
    <q-toggle v-model="debug"
              color="red"
              label="Display debugging">
    </q-toggle>
    -->
    <q-spinner v-if="spinner" color="primary" size="2em" style="margin-left: 2em;"></q-spinner>
</q-form>
    <div class="row q-pa-sm q-gutter-sm" id="directoryResults">
        <q-card v-for="user in results" class="col-2 col-xs-8 col-sm-5 col-md-8 col-lg-3 col-xl-2 block directory">
            <q-card-section class="grid row card_header" :class="[user.svm ? 'SVM' : '']">
                <a v-if="user.svm && user.iamId && user.mothraId" :href="'@HttpHelper.GetOldViperRootURL()/default.cfm?page=userinfo&id='+ user.iamId + '&mothraID=' + user.mothraId" class="userinfo_button top_button">
                    <q-icon name="person" size="xs"></q-icon>
                    <q-tooltip>User Information</q-tooltip>
                </a>
                <a v-if="user.mailId" :href="'mailto:' + user.mailId + '@@ucdavis.edu'" class="email_button top_button">
                    <q-icon name="email" size="xs"></q-icon>
                    <q-tooltip>Email {{user.mailId}}</q-tooltip>
                </a>
                <a v-if="user.svm" :href="'@HttpHelper.GetRootURL()/EmulateUser/' + user.loginId" class="emulate_button top_button">
                    <q-icon name="face" size="xs"></q-icon>
                    <q-tooltip>Emulate {{user.name}}</q-tooltip>
                </a>
                <a v-if="ids" :href="'@HttpHelper.GetOldViperRootURL()' + '/default.cfm?Page=AAUDCheck&mothraID=' + user.mothraId + '&loginID=' + user.loginId" class="AAUD_button top_button">
                    <q-icon name="account_circle" size="xs"></q-icon>
                    <q-tooltip>AAUD Check</q-tooltip>
                </a>
                <a v-if="ids" :href="'@HttpHelper.GetOldViperRootURL()' + '/default.cfm?Page=IDCardCheck&LoginID=' + user.loginId" v-if="ids" class="ID_button top_button">
                    <q-icon name="account_box" size="xs"></q-icon>
                    <q-tooltip>ID Check</q-tooltip>
                </a>
                <a :href="'@HttpHelper.GetOldViperRootURL()' + '/default.cfm?Page=UnitHeads&MailID=' + user.mailId" v-if="ids" class="MSO_button top_button">
                    <q-icon name="supervisor_account" size="xs"></q-icon>
                    <q-tooltip>MSO/CAO Lookup</q-tooltip>
                </a>
                @if (UserHelper.HasPermission(rapsContext, UserHelper.GetCurrentUser(), "SVMSecure.DirectoryUCPathInfo"))
                {
                    @:
                    <a :href="'@HttpHelper.GetOldViperRootURL()' + '/default.cfm?Page=UCPathInfo&emplid=' + user.employeeId" v-if="ids && user.employeeId" class="UCPath_button top_button">
                        <q-icon name="school" size="sm"></q-icon>
                        <q-tooltip>UCPath Info</q-tooltip>
                    </a>
                }
                    @if (UserHelper.HasPermission(rapsContext, UserHelper.GetCurrentUser(), "SVMSecure.CATS.ServiceDesk"))
                {
                    @:
                    <a :href="'@HttpHelper.GetOldViperRootURL()' + '/default.cfm?Page=alternatePhoto&iamID' + user.iamId + '&mailID=' + props.row.mailId + '&empName=' + user.name" v-if="ids && user.currentAffiliate" class="photo_button top_button">
                        <q-icon name="photo_camera" size="xs"></q-icon>
                        <q-tooltip>Alt. Photo</q-tooltip>
                    </a>
                }
        </q-card-section>
            <q-card-section class="row">
                <q-card-section class="col photo">
                    <q-avatar size="87px" square class="text-right photo_avatar">
                    <img :src="'@HttpHelper.GetOldViperRootURL()/public/utilities/getbase64image.cfm?mailid=' + user.mailId + '&altphoto=1'" height="40" id="siteProfileAvatar">
                    </q-avatar>
                </q-card-section>
                <q-card-section class="col">
                    <h5 v-if="user.userName">{{user.userName}}</h5>
                    <h1>{{user.name}}</h1>
                    <h2 v-if="user.title">{{user.title}}</h2>
                    <h2 v-if="user.department">{{user.department}}</h2>
                    <h3 v-if="user.ucdStudentLevel">{{user.ucdStudentLevel}}</h3>
                    <h4 v-if="user.svm && ucd">SVM</h4>
                    <div class="contact">
                        <div class="mail" v-if="user.email"><a :href="'mailto:' + user.email">{{user.email}}</a></div>
                        <div class="host" v-if="ids && user.emailHost">[{{user.emailHost}}]</div>
                        <div class="phone" v-if="user.phone">Ph: {{ user.phone }}</div>
                        <div class="mobile" v-if="user.mobile">M: {{ user.mobile }}</div>
                        <div class="nextel" v-if="user.ldpager">Pager: {{ user.ldpager }}</div>
                        <div class="nextel" v-if="user.nextel">M: {{ user.nextel }} (VMACS)</div>
                        <div class="address" v-if="user.postalAddress">{{ user.postalAddress }}</div>
                    </div>
            </q-card-section>
            </q-card-section>
            <q-separator v-if="ids && (user.spridentId || user.pidm || user.employeeId || user.iamId || user.mothraId || user.mivId)"></q-separator>
            <q-card-section class="row ids" v-if="ids && (user.spridentId || user.pidm || user.employeeId || user.iamId || user.mothraId || user.mivId)">
                <div v-if="user.spridenId">
                    <span>BannerID:</span>
                    @if (UserHelper.HasPermission(rapsContext, UserHelper.GetCurrentUser(), "SVMSecure.SIS.AllStudents"))
                    {
                    @: <a :href="'@HttpHelper.GetOldViperRootURL()' + '/students/sis/default.cfm?Page=AssignPidmAndRedirect&Pidm=' + user.spridenId + '&JumpPage=Home'">{{ user.spridenId }}</a>
                    }
                    else
                    {
                    @: {{ user.spridenId }}
                    }
                </div>
                <div v-if="user.pidm"><span>PIDM:</span> {{ user.pidm }}</div>
                <div v-if="user.employeeId"><span>EmployeeID:</span> {{ user.employeeId}}</div>
                <div v-if="user.iamId"><span>IAMID:</span> {{ user.iamId }}</div>
                <div v-if="user.mothraId"><span>MothraID:</span> {{ user.mothraId }}</div>
                <div v-if="user.mivId"><span>MIVID:</span> {{ user.mivId }}</div>
            </q-card-section>
            <q-separator v-if="debug"></q-separator>
            <q-card-section v-if="debug">
                <pre>
                {{ user.originalObject }}
                </pre>
            </q-card-section>
        </q-card>
    </div>

@section Scripts {
    <script asp-add-nonce="true">
        createVueApp({
            data() {
                return {
                    userSearch: getItemFromStorage("directory_search") ?? "",
                    ucd: getItemFromStorage("directory_ucd") ?? false,
                    ids: getItemFromStorage("directory_ids") ?? false,
                    debug: getItemFromStorage("directory_debug") ?? false,
                    spinner: false,
                    results: []
                }
            },
            methods: {
                findUsers: async function () {
                    this.spinner = false;
                    this.results = [];
                    var urlBase = "@Url.Content("~/Directory/search/")" + this.userSearch;
                    if (this.ucd) {
                        urlBase += "/ucd"
                    }
                    if (this.userSearch.length >= 2) {
                        this.spinner = true;
                        this.results = (await viperFetch(this, urlBase))
                        this.spinner = false;
                    }
                }
            },
            mounted() {
                this.findUsers();
            },
            watch: {
                userSearch: function () {
                    putItemInStorage("directory_search", this.userSearch);
                    putItemInStorage("directory_ucd", this.ucd);
                    this.findUsers();
                },
                ucd: function () {
                    putItemInStorage("directory_search", this.userSearch);
                    putItemInStorage("directory_ucd", this.ucd);
                    this.findUsers();
                },
                ids: function () {
                    putItemInStorage("directory_search", this.userSearch);
                    putItemInStorage("directory_ids", this.ids);
                    this.findUsers();
                },
                debug: function () {
                    putItemInStorage("directory_search", this.userSearch);
                    putItemInStorage("directory_debug", this.ids);
                    this.findUsers();
                }
            }
        })
    </script>
}