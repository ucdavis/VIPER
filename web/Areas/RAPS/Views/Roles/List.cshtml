<div class="q-pa-md">
    <q-table title="Roles"
            dense
            row-key="roleId"
            :loading="rolesTable.loading"
            :rows="rolesTable.rows"
            :columns="rolesTable.columns"
            :filter="rolesTable.filter" 
            :pagination="rolesTable.pagination">
        <template v-slot:top-right="props">
            <q-input class="q-ml-xs q-mr-xs" v-model="rolesTable.filter" dense outlined debounce="300" placeholder="Filter Results">
                <template v-slot:append>
                    <q-icon name="filter_alt" />
                </template>
            </q-input>
        </template>
        <template v-slot:body-cell-roleid="props">
            <q-td :props="props">
                <q-btn :props="props" size="sm" padding="xs" color="primary" square flat icon="person" :href="'RoleMembers?roleId=' + props.row.roleId"></q-btn>
                <q-btn :props="props" size="sm" padding="xs" color="primary" square flat icon="lock" @@click="togglePermissions(props.row.roleId)"></q-btn>
            </q-td>
        </template>
        <template v-slot:body-cell-role="props">
            <q-td :props="props">
                {{props.row.friendlyName}}
                <br />
                <span style="font-size:.9em">{{props.row.description}}</span>
                <br />
                <div class="q-pl-md" style="font-size:.9em" v-if="permissionRoleId == props.row.roleId">
                    <div v-for="permission in permissions" class="row">
                        <div class="col">
                            <q-icon name="lock"></q-icon>
                            {{permission.permission}}
                         </div>
                         <div class="col">
                             {{permission.description}}
                        </div>
                    </div>
                </div>
            </q-td>
        </template>
    </q-table>
</div>

@section Scripts {
    <script src="~/js/qtable.js"></script>
    <script asp-add-nonce="true">
        createVueApp({
            data() {
                return {
                    rolesTable: new quasarTable({
                        columns: [
                            { name: "roleid", label: "", field: "roleId", align: "left", style: "width:50px;" },
                            { name: "role", label: "Role", field: "friendlyName", align: "left", sortable: true },
                            { name: "viewname", label: "Member List", field: "viewName", align: "left", sortable: true },
                            { name: "membersCount", label: "Explicit Members", field: "membersCount", align: "left", sortable: true }
                        ],
                        urlBase: "Roles",
                        onLoad: function (data) {
                            this.rows = data.map(r => ({
                                ...r,
                                membersCount: r.tblRoleMembers.length,
                                viewName: r.viewName
                            }))
                        }
                    }),
                    permissionRoleId: 0,
                    permissions: []
                }
            },
            methods: {
                togglePermissions: async function(id) {
                    var perms = (await viperFetch(this, "Roles/" + id + "/Permissions"))
                        .map(rolePermissions => rolePermissions.permission)
                    this.permissions = perms
                    this.permissionRoleId = id
                }
            },
            async mounted () {
                this.rolesTable.load()
            }
        })
    </script>
}
